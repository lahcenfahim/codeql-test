---
queries:
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CVE-2018-1281/BindToAllInterfaces.ql
  relativeBqrsPath: codeql/python-queries/Security/CVE-2018-1281/BindToAllInterfaces.bqrs
  metadata:
    name: Binding a socket to all network interfaces
    description: |-
      Binding a socket to all interfaces opens it up to traffic from any IPv4 address
       and is therefore associated with security risks.
    kind: problem
    tags: |-
      security
             external/cwe/cwe-200
    problem.severity: error
    security-severity: 6.5
    sub-severity: low
    precision: high
    id: py/bind-socket-all-network-interfaces
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-020-ExternalAPIs/ExternalAPIsUsedWithUntrustedData.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-020-ExternalAPIs/ExternalAPIsUsedWithUntrustedData.bqrs
  metadata:
    name: Frequency counts for external APIs that are used with untrusted data
    description: |-
      This reports the external APIs that are used with untrusted data, along with how
                    frequently the API is called, and how many unique sources of untrusted data flow
                    to it.
    id: py/count-untrusted-data-external-api
    kind: table
    tags: security external/cwe/cwe-020
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-020-ExternalAPIs/UntrustedDataToExternalAPI.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-020-ExternalAPIs/UntrustedDataToExternalAPI.bqrs
  metadata:
    name: Untrusted data passed to external API
    description: "Data provided remotely is used in this external API without sanitization,\
      \ which could be a security risk."
    id: py/untrusted-data-to-external-api
    kind: path-problem
    precision: low
    problem.severity: error
    security-severity: 7.8
    tags: security external/cwe/cwe-020
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-020/CookieInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-020/CookieInjection.bqrs
  metadata:
    name: Construction of a cookie using user-supplied input
    description: Constructing cookies from user input may allow an attacker to perform
      a Cookie Poisoning attack.
    kind: path-problem
    problem.severity: warning
    precision: high
    security-severity: 5.0
    id: py/cookie-injection
    tags: |-
      security
             external/cwe/cwe-020
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-020/IncompleteHostnameRegExp.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-020/IncompleteHostnameRegExp.bqrs
  metadata:
    name: Incomplete regular expression for hostnames
    description: Matching a URL or hostname against a regular expression that contains
      an unescaped dot as part of the hostname might match more hostnames than expected.
    kind: problem
    problem.severity: warning
    security-severity: 7.8
    precision: high
    id: py/incomplete-hostname-regexp
    tags: |-
      correctness
             security
             external/cwe/cwe-020
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-020/IncompleteUrlSubstringSanitization.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-020/IncompleteUrlSubstringSanitization.bqrs
  metadata:
    name: Incomplete URL substring sanitization
    description: Security checks on the substrings of an unparsed URL are often vulnerable
      to bypassing.
    kind: problem
    problem.severity: warning
    security-severity: 7.8
    precision: high
    id: py/incomplete-url-substring-sanitization
    tags: |-
      correctness
             security
             external/cwe/cwe-020
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-020/OverlyLargeRange.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-020/OverlyLargeRange.bqrs
  metadata:
    name: Overly permissive regular expression range
    description: |-
      Overly permissive regular expression ranges match a wider range of characters than intended.
                    This may allow an attacker to bypass a filter or sanitizer.
    kind: problem
    problem.severity: warning
    security-severity: 5.0
    precision: high
    id: py/overly-large-range
    tags: |-
      correctness
             security
             external/cwe/cwe-020
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-022/PathInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-022/PathInjection.bqrs
  metadata:
    name: Uncontrolled data used in path expression
    description: Accessing paths influenced by users can allow an attacker to access
      unexpected resources.
    kind: path-problem
    problem.severity: error
    security-severity: 7.5
    sub-severity: high
    precision: high
    id: py/path-injection
    tags: |-
      correctness
             security
             external/cwe/cwe-022
             external/cwe/cwe-023
             external/cwe/cwe-036
             external/cwe/cwe-073
             external/cwe/cwe-099
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-022/TarSlip.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-022/TarSlip.bqrs
  metadata:
    name: Arbitrary file write during tarfile extraction
    description: |-
      Extracting files from a malicious tar archive without validating that the
                    destination file path is within the destination directory can cause files outside
                    the destination directory to be overwritten.
    kind: path-problem
    id: py/tarslip
    problem.severity: error
    security-severity: 7.5
    precision: medium
    tags: |-
      security
             external/cwe/cwe-022
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-074/TemplateInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-074/TemplateInjection.bqrs
  metadata:
    name: Server Side Template Injection
    description: Using user-controlled data to create a template can lead to remote
      code execution or cross site scripting.
    kind: path-problem
    problem.severity: error
    precision: high
    security-severity: 9.3
    id: py/template-injection
    tags: |-
      security
             external/cwe/cwe-074
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-078/CommandInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-078/CommandInjection.bqrs
  metadata:
    name: Uncontrolled command line
    description: |-
      Using externally controlled strings in a command line may allow a malicious
                    user to change the meaning of the command.
    kind: path-problem
    problem.severity: error
    security-severity: 9.8
    sub-severity: high
    precision: high
    id: py/command-line-injection
    tags: |-
      correctness
             security
             external/cwe/cwe-078
             external/cwe/cwe-088
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-078/UnsafeShellCommandConstruction.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-078/UnsafeShellCommandConstruction.bqrs
  metadata:
    name: Unsafe shell command constructed from library input
    description: |-
      Using externally controlled strings in a command line may allow a malicious
                    user to change the meaning of the command.
    kind: path-problem
    problem.severity: error
    security-severity: 6.3
    precision: medium
    id: py/shell-command-constructed-from-input
    tags: |-
      correctness
             security
             external/cwe/cwe-078
             external/cwe/cwe-088
             external/cwe/cwe-073
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-079/Jinja2WithoutEscaping.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-079/Jinja2WithoutEscaping.bqrs
  metadata:
    name: Jinja2 templating with autoescape=False
    description: |-
      Using jinja2 templates with 'autoescape=False' can
                    cause a cross-site scripting vulnerability.
    kind: problem
    problem.severity: error
    security-severity: 6.1
    precision: medium
    id: py/jinja2/autoescape-false
    tags: |-
      security
             external/cwe/cwe-079
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-079/ReflectedXss.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-079/ReflectedXss.bqrs
  metadata:
    name: Reflected server-side cross-site scripting
    description: |-
      Writing user input directly to a web page
                    allows for a cross-site scripting vulnerability.
    kind: path-problem
    problem.severity: error
    security-severity: 6.1
    sub-severity: high
    precision: high
    id: py/reflective-xss
    tags: |-
      security
             external/cwe/cwe-079
             external/cwe/cwe-116
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-089/SqlInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-089/SqlInjection.bqrs
  metadata:
    name: SQL query built from user-controlled sources
    description: |-
      Building a SQL query from user-controlled sources is vulnerable to insertion of
                    malicious SQL code by the user.
    kind: path-problem
    problem.severity: error
    security-severity: 8.8
    precision: high
    id: py/sql-injection
    tags: |-
      security
             external/cwe/cwe-089
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-090/LdapInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-090/LdapInjection.bqrs
  metadata:
    name: LDAP query built from user-controlled sources
    description: |-
      Building an LDAP query from user-controlled sources is vulnerable to insertion of
                    malicious LDAP code by the user.
    kind: path-problem
    problem.severity: error
    security-severity: 9.8
    precision: high
    id: py/ldap-injection
    tags: |-
      security
             external/cwe/cwe-090
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-094/CodeInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-094/CodeInjection.bqrs
  metadata:
    name: Code injection
    description: |-
      Interpreting unsanitized user input as code allows a malicious user to perform arbitrary
                    code execution.
    kind: path-problem
    problem.severity: error
    security-severity: 9.3
    sub-severity: high
    precision: high
    id: py/code-injection
    tags: |-
      security
             external/cwe/cwe-094
             external/cwe/cwe-095
             external/cwe/cwe-116
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-113/HeaderInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-113/HeaderInjection.bqrs
  metadata:
    name: HTTP Response Splitting
    description: |-
      Writing user input directly to an HTTP header
                    makes code vulnerable to attack by header splitting.
    kind: path-problem
    problem.severity: error
    security-severity: 6.1
    precision: high
    id: py/http-response-splitting
    tags: |-
      security
             external/cwe/cwe-113
             external/cwe/cwe-079
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-116/BadTagFilter.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-116/BadTagFilter.bqrs
  metadata:
    name: Bad HTML filtering regexp
    description: "Matching HTML tags using regular expressions is hard to do right,\
      \ and can easily lead to security issues."
    kind: problem
    problem.severity: warning
    security-severity: 7.8
    precision: high
    id: py/bad-tag-filter
    tags: |-
      correctness
             security
             external/cwe/cwe-116
             external/cwe/cwe-020
             external/cwe/cwe-185
             external/cwe/cwe-186
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-117/LogInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-117/LogInjection.bqrs
  metadata:
    name: Log Injection
    description: |-
      Building log entries from user-controlled data is vulnerable to
                    insertion of forged log entries by a malicious user.
    kind: path-problem
    problem.severity: error
    security-severity: 7.8
    precision: medium
    id: py/log-injection
    tags: |-
      security
             external/cwe/cwe-117
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-209/StackTraceExposure.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-209/StackTraceExposure.bqrs
  metadata:
    name: Information exposure through an exception
    description: |-
      Leaking information about an exception, such as messages and stack traces, to an
                    external user can expose implementation details that are useful to an attacker for
                    developing a subsequent exploit.
    kind: path-problem
    problem.severity: error
    security-severity: 5.4
    precision: high
    id: py/stack-trace-exposure
    tags: |-
      security
             external/cwe/cwe-209
             external/cwe/cwe-497
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-215/FlaskDebug.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-215/FlaskDebug.bqrs
  metadata:
    name: Flask app is run in debug mode
    description: Running a Flask app in debug mode may allow an attacker to run arbitrary
      code through the Werkzeug debugger.
    kind: problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/flask-debug
    tags: |-
      security
             external/cwe/cwe-215
             external/cwe/cwe-489
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-285/PamAuthorization.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-285/PamAuthorization.bqrs
  metadata:
    name: PAM authorization bypass due to incorrect usage
    description: Not using `pam_acct_mgmt` after `pam_authenticate` to check the validity
      of a login can lead to authorization bypass.
    kind: path-problem
    problem.severity: warning
    security-severity: 8.1
    precision: high
    id: py/pam-auth-bypass
    tags: |-
      security
             external/cwe/cwe-285
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-295/MissingHostKeyValidation.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-295/MissingHostKeyValidation.bqrs
  metadata:
    name: Accepting unknown SSH host keys when using Paramiko
    description: Accepting unknown host keys can allow man-in-the-middle attacks.
    kind: problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/paramiko-missing-host-key-validation
    tags: |-
      security
             external/cwe/cwe-295
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-295/RequestWithoutValidation.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-295/RequestWithoutValidation.bqrs
  metadata:
    name: Request without certificate validation
    description: Making a request without certificate validation can allow man-in-the-middle
      attacks.
    kind: problem
    problem.severity: error
    security-severity: 7.5
    precision: medium
    id: py/request-without-cert-validation
    tags: |-
      security
             external/cwe/cwe-295
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-312/CleartextLogging.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-312/CleartextLogging.bqrs
  metadata:
    name: Clear-text logging of sensitive information
    description: |-
      Logging sensitive information without encryption or hashing can
                    expose it to an attacker.
    kind: path-problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/clear-text-logging-sensitive-data
    tags: |-
      security
             external/cwe/cwe-312
             external/cwe/cwe-359
             external/cwe/cwe-532
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-312/CleartextStorage.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-312/CleartextStorage.bqrs
  metadata:
    name: Clear-text storage of sensitive information
    description: |-
      Sensitive information stored without encryption or hashing can expose it to an
                    attacker.
    kind: path-problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/clear-text-storage-sensitive-data
    tags: |-
      security
             external/cwe/cwe-312
             external/cwe/cwe-315
             external/cwe/cwe-359
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-326/WeakCryptoKey.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-326/WeakCryptoKey.bqrs
  metadata:
    name: Use of weak cryptographic key
    description: Use of a cryptographic key that is too small may allow the encryption
      to be broken.
    kind: problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/weak-crypto-key
    tags: |-
      security
             external/cwe/cwe-326
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-327/BrokenCryptoAlgorithm.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-327/BrokenCryptoAlgorithm.bqrs
  metadata:
    name: Use of a broken or weak cryptographic algorithm
    description: Using broken or weak cryptographic algorithms can compromise security.
    kind: problem
    problem.severity: warning
    security-severity: 7.5
    precision: high
    id: py/weak-cryptographic-algorithm
    tags: |-
      security
             external/cwe/cwe-327
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-327/InsecureDefaultProtocol.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-327/InsecureDefaultProtocol.bqrs
  metadata:
    name: Default version of SSL/TLS may be insecure
    description: |-
      Leaving the SSL/TLS version unspecified may result in an insecure
                    default protocol being used.
    id: py/insecure-default-protocol
    kind: problem
    problem.severity: warning
    security-severity: 7.5
    precision: high
    tags: |-
      security
             external/cwe/cwe-327
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-327/InsecureProtocol.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-327/InsecureProtocol.bqrs
  metadata:
    name: Use of insecure SSL/TLS version
    description: Using an insecure SSL/TLS version may leave the connection vulnerable
      to attacks.
    id: py/insecure-protocol
    kind: problem
    problem.severity: warning
    security-severity: 7.5
    precision: high
    tags: |-
      security
             external/cwe/cwe-327
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-327/WeakSensitiveDataHashing.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-327/WeakSensitiveDataHashing.bqrs
  metadata:
    name: Use of a broken or weak cryptographic hashing algorithm on sensitive data
    description: Using broken or weak cryptographic hashing algorithms can compromise
      security.
    kind: path-problem
    problem.severity: warning
    security-severity: 7.5
    precision: high
    id: py/weak-sensitive-data-hashing
    tags: |-
      security
             external/cwe/cwe-327
             external/cwe/cwe-328
             external/cwe/cwe-916
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-352/CSRFProtectionDisabled.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-352/CSRFProtectionDisabled.bqrs
  metadata:
    name: CSRF protection weakened or disabled
    description: |-
      Disabling or weakening CSRF protection may make the application
                    vulnerable to a Cross-Site Request Forgery (CSRF) attack.
    kind: problem
    problem.severity: warning
    security-severity: 8.8
    precision: high
    id: py/csrf-protection-disabled
    tags: |-
      security
             external/cwe/cwe-352
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-377/InsecureTemporaryFile.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-377/InsecureTemporaryFile.bqrs
  metadata:
    name: Insecure temporary file
    description: Creating a temporary file using this method may be insecure.
    kind: problem
    id: py/insecure-temporary-file
    problem.severity: error
    security-severity: 7.0
    sub-severity: high
    precision: high
    tags: |-
      external/cwe/cwe-377
             security
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-502/UnsafeDeserialization.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-502/UnsafeDeserialization.bqrs
  metadata:
    name: Deserialization of user-controlled data
    description: Deserializing user-controlled data may allow attackers to execute
      arbitrary code.
    kind: path-problem
    id: py/unsafe-deserialization
    problem.severity: error
    security-severity: 9.8
    sub-severity: high
    precision: high
    tags: |-
      external/cwe/cwe-502
             security
             serialization
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-601/UrlRedirect.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-601/UrlRedirect.bqrs
  metadata:
    name: URL redirection from remote source
    description: |-
      URL redirection based on unvalidated user input
                    may cause redirection to malicious web sites.
    kind: path-problem
    problem.severity: error
    security-severity: 6.1
    sub-severity: low
    id: py/url-redirection
    tags: |-
      security
             external/cwe/cwe-601
    precision: high
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-611/Xxe.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-611/Xxe.bqrs
  metadata:
    name: XML external entity expansion
    description: |-
      Parsing user input as an XML document with external
                    entity expansion is vulnerable to XXE attacks.
    kind: path-problem
    problem.severity: error
    security-severity: 9.1
    precision: high
    id: py/xxe
    tags: |-
      security
             external/cwe/cwe-611
             external/cwe/cwe-827
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-614/InsecureCookie.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-614/InsecureCookie.bqrs
  metadata:
    name: Failure to use secure cookies
    description: |-
      Insecure cookies may be sent in cleartext, which makes them vulnerable to
                    interception.
    kind: problem
    problem.severity: warning
    security-severity: 5.0
    precision: high
    id: py/insecure-cookie
    tags: |-
      security
             external/cwe/cwe-614
             external/cwe/cwe-1004
             external/cwe/cwe-1275
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-643/XpathInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-643/XpathInjection.bqrs
  metadata:
    name: XPath query built from user-controlled sources
    description: |-
      Building a XPath query from user-controlled sources is vulnerable to insertion of
                    malicious Xpath code by the user.
    kind: path-problem
    problem.severity: error
    security-severity: 9.8
    precision: high
    id: py/xpath-injection
    tags: |-
      security
             external/cwe/cwe-643
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-730/PolynomialReDoS.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-730/PolynomialReDoS.bqrs
  metadata:
    name: Polynomial regular expression used on uncontrolled data
    description: |-
      A regular expression that can require polynomial time
                    to match may be vulnerable to denial-of-service attacks.
    kind: path-problem
    problem.severity: warning
    security-severity: 7.5
    precision: high
    id: py/polynomial-redos
    tags: |-
      security
             external/cwe/cwe-1333
             external/cwe/cwe-730
             external/cwe/cwe-400
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-730/ReDoS.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-730/ReDoS.bqrs
  metadata:
    name: Inefficient regular expression
    description: |-
      A regular expression that requires exponential time to match certain inputs
                    can be a performance bottleneck, and may be vulnerable to denial-of-service
                    attacks.
    kind: problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/redos
    tags: |-
      security
             external/cwe/cwe-1333
             external/cwe/cwe-730
             external/cwe/cwe-400
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-730/RegexInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-730/RegexInjection.bqrs
  metadata:
    name: Regular expression injection
    description: |-
      User input should not be used in regular expressions without first being escaped,
                    otherwise a malicious user may be able to inject an expression that could require
                    exponential time on certain inputs.
    kind: path-problem
    problem.severity: error
    security-severity: 7.5
    precision: high
    id: py/regex-injection
    tags: |-
      security
             external/cwe/cwe-730
             external/cwe/cwe-400
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-732/WeakFilePermissions.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-732/WeakFilePermissions.bqrs
  metadata:
    name: Overly permissive file permissions
    description: Allowing files to be readable or writable by users other than the
      owner may allow sensitive information to be accessed.
    kind: problem
    id: py/overly-permissive-file
    problem.severity: warning
    security-severity: 7.8
    sub-severity: high
    precision: medium
    tags: |-
      external/cwe/cwe-732
             security
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-776/XmlBomb.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-776/XmlBomb.bqrs
  metadata:
    name: XML internal entity expansion
    description: |-
      Parsing user input as an XML document with arbitrary internal
                    entity expansion is vulnerable to denial-of-service attacks.
    kind: path-problem
    problem.severity: warning
    security-severity: 7.5
    precision: high
    id: py/xml-bomb
    tags: |-
      security
             external/cwe/cwe-776
             external/cwe/cwe-400
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-798/HardcodedCredentials.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-798/HardcodedCredentials.bqrs
  metadata:
    name: Hard-coded credentials
    description: Credentials are hard coded in the source code of the application.
    kind: path-problem
    problem.severity: error
    security-severity: 9.8
    precision: low
    id: py/hardcoded-credentials
    tags: |-
      security
             external/cwe/cwe-259
             external/cwe/cwe-321
             external/cwe/cwe-798
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-918/FullServerSideRequestForgery.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-918/FullServerSideRequestForgery.bqrs
  metadata:
    name: Full server-side request forgery
    description: Making a network request to a URL that is fully user-controlled allows
      for request forgery attacks.
    kind: path-problem
    problem.severity: error
    security-severity: 9.1
    precision: high
    id: py/full-ssrf
    tags: |-
      security
             external/cwe/cwe-918
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-918/PartialServerSideRequestForgery.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-918/PartialServerSideRequestForgery.bqrs
  metadata:
    name: Partial server-side request forgery
    description: Making a network request to a URL that is partially user-controlled
      allows for request forgery attacks.
    kind: path-problem
    problem.severity: error
    security-severity: 9.1
    precision: medium
    id: py/partial-ssrf
    tags: |-
      security
             external/cwe/cwe-918
 -
  pack: codeql/python-queries#1
  relativeQueryPath: Security/CWE-943/NoSqlInjection.ql
  relativeBqrsPath: codeql/python-queries/Security/CWE-943/NoSqlInjection.bqrs
  metadata:
    name: NoSQL Injection
    description: |-
      Building a NoSQL query from user-controlled sources is vulnerable to insertion of
                    malicious NoSQL code by the user.
    kind: path-problem
    precision: high
    problem.severity: error
    security-severity: 8.8
    id: py/nosql-injection
    tags: |-
      security
             external/cwe/cwe-943
extensionPacks: []
packs:
  codeql/python-queries#1:
    name: codeql/python-queries
    version: 1.6.5-dev
    isLibrary: false
    isExtensionPack: false
    localPath: file:///C:/Users/elfah/Desktop/projects/codeql/python/ql/src/
    localPackDefinitionFile: file:///C:/Users/elfah/Desktop/projects/codeql/python/ql/src/qlpack.yml
    headSha: e8ddac08b7c6d5fd22c0b5f93b7e43f5a0d16623
    runDataExtensions:
     -
      pack: codeql/python-all#0
      relativePath: ext/default-threat-models-fixup.model.yml
      index: 0
      firstRowId: 0
      rowCount: 1
      locations:
        lineNumbers: A=8
        columnNumbers: A=9
     -
      pack: codeql/python-all#0
      relativePath: semmle/python/frameworks/Asyncpg.model.yml
      index: 0
      firstRowId: 1
      rowCount: 5
      locations:
        lineNumbers: A=7+1+2+1+2
        columnNumbers: A=9*5
     -
      pack: codeql/python-all#0
      relativePath: semmle/python/frameworks/Asyncpg.model.yml
      index: 1
      firstRowId: 6
      rowCount: 6
      locations:
        lineNumbers: A=20+4+1*2+2+1
        columnNumbers: A=9*6
     -
      pack: codeql/python-all#0
      relativePath: semmle/python/frameworks/Stdlib.model.yml
      index: 0
      firstRowId: 12
      rowCount: 12
      locations:
        lineNumbers: A=6+1*4+2+1+2+1*2+4+2
        columnNumbers: A=9*12
     -
      pack: codeql/python-all#0
      relativePath: semmle/python/frameworks/Stdlib.model.yml
      index: 1
      firstRowId: 24
      rowCount: 1
      locations:
        lineNumbers: A=29
        columnNumbers: A=9
     -
      pack: codeql/python-all#0
      relativePath: semmle/python/frameworks/Stdlib.model.yml
      index: 2
      firstRowId: 25
      rowCount: 66
      locations:
        lineNumbers: A=37+1+2+4+2*2+4+2*3+1+2+1+2+1+2+4+2+4+2*2+3+2*2+3+1+2*4+4+1+4+1+4+1*5+2*4+4+1+2*11+3+2+3+4+1+2*2+1+2
        columnNumbers: A=9*66
     -
      pack: codeql/python-all#0
      relativePath: semmle/python/frameworks/data/internal/subclass-capture/ALL.model.yml
      index: 0
      firstRowId: 91
      rowCount: 58275
      locations:
        lineNumbers: A=7+3*58274
        columnNumbers: A=5*58275
     -
      pack: codeql/threat-models#2
      relativePath: ext/supported-threat-models.model.yml
      index: 0
      firstRowId: 58366
      rowCount: 1
      locations:
        lineNumbers: A=6
        columnNumbers: A=9
     -
      pack: codeql/threat-models#2
      relativePath: ext/threat-model-grouping.model.yml
      index: 0
      firstRowId: 58367
      rowCount: 15
      locations:
        lineNumbers: A=8+3+1+3+1*5+3+1+5+1*3
        columnNumbers: A=9*15
  codeql/util#3:
    name: codeql/util
    version: 2.0.18-dev
    isLibrary: true
    isExtensionPack: false
    localPath: file:///C:/Users/elfah/Desktop/projects/codeql/shared/util/
    localPackDefinitionFile: file:///C:/Users/elfah/Desktop/projects/codeql/shared/util/qlpack.yml
    headSha: e8ddac08b7c6d5fd22c0b5f93b7e43f5a0d16623
    runDataExtensions: []
  codeql/threat-models#2:
    name: codeql/threat-models
    version: 1.0.31-dev
    isLibrary: true
    isExtensionPack: false
    localPath: file:///C:/Users/elfah/Desktop/projects/codeql/shared/threat-models/
    localPackDefinitionFile: file:///C:/Users/elfah/Desktop/projects/codeql/shared/threat-models/qlpack.yml
    headSha: e8ddac08b7c6d5fd22c0b5f93b7e43f5a0d16623
    runDataExtensions: []
  codeql/python-all#0:
    name: codeql/python-all
    version: 4.0.15-dev
    isLibrary: true
    isExtensionPack: false
    localPath: file:///C:/Users/elfah/Desktop/projects/codeql/python/ql/lib/
    localPackDefinitionFile: file:///C:/Users/elfah/Desktop/projects/codeql/python/ql/lib/qlpack.yml
    headSha: e8ddac08b7c6d5fd22c0b5f93b7e43f5a0d16623
    runDataExtensions: []
